/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sistema.automatizado;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Irene
 */
public class VentanaPlantaFisica extends javax.swing.JFrame {

    private PlantaFisica plantaFisica;
    
    /**
     * Creates new form VentanaPlantaFisica
     */
    public Ventana padre;
    
    public VentanaPlantaFisica(Ventana padre) {
        initComponents();
        this.padre = padre;
        Image icono = Toolkit.getDefaultToolkit().getImage("logo.png");
        this.setIconImage(icono);
        setTitle("Lista Planta Fisica");
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(new java.awt.Color(255,255,255));
        
        
        //Se instancia la clase encargada de manipular la "Docente"
        //quedando enlazada directamente con la JTable de este formulario
        plantaFisica = new PlantaFisica(this.tblPlantaFisica);
        
        //Activar "Escuchador de teclas"
        escuharTeclas();
        
        //Activar "Escuchador" del mouse
        escucharMouse();
        
        //Evitar selección de múltiples registros
        tblPlantaFisica.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    
    }

    private VentanaPlantaFisica() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    /**
     * Metodo responsable de limpiar los componentes de la ventana
     * @param tabla componente de la ventana
     */
    
    public void limpiarTabla(JTable tabla){
        try {
            DefaultTableModel modelo=(DefaultTableModel) tabla.getModel();
            int filas=tabla.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }
    
    public void cargar(){
    
        //DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        limpiarTabla(tblPlantaFisica);
        DefaultTableModel modelo = (DefaultTableModel)tblPlantaFisica.getModel();
        for (int i = 0; i < padre.listaPlantaFisica.size() ; i++) {
            
            PlantaFisica aux = padre.listaPlantaFisica.get(i);
            modelo.addRow(new Object[]{aux.getModulo(),aux.getNumero(),aux.getTipo()});
            
        }
        
        //modelo.addRow(new Object[]{1,2,"aula"});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlantaFisica = new javax.swing.JTable();
        lblModulo = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        txtModulo = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        btnLimpiarCampos = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblPlantaFisica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Módulo", "Aula", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPlantaFisica);

        lblModulo.setText("Módulo:");

        lblNumero.setText("Número:");

        lblTipo.setText("Tipo:");

        btnLimpiarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/limpiarcampos.png"))); // NOI18N
        btnLimpiarCampos.setToolTipText("Limpiar campos");
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/add.png"))); // NOI18N
        btnAgregar.setToolTipText("Agregar al listado");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/refresh-32.png"))); // NOI18N
        btnModificar.setToolTipText("Refrescar listado");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/eliminarlemento.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar elemento seleccionado");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(13, 80, 175));
        jPanel5.setToolTipText("");
        jPanel5.setPreferredSize(new java.awt.Dimension(700, 41));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LISTA PLANTA FISICA");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNumero)
                            .addComponent(lblModulo)
                            .addComponent(lblTipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModulo)
                            .addComponent(txtNumero)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiarCampos)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addGap(18, 18, 18)
                .addComponent(btnModificar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModulo)
                    .addComponent(txtModulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumero)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpiarCampos)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed

        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        //Se procede a ejecutar el método encargado de agregar un nuevo registro
        //tomando como parámetros l@s String de los campos de texto
        plantaFisica.agregar(Integer.parseInt(txtModulo.getText()), txtNumero.getText(), txtTipo.getText());
        limpiarCampos();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        //Se verifica que exista una fila seleccionada para poder modificarla
        //se puede selecionar con el mouse o con las flehas del teclado
        if(tblPlantaFisica.getSelectedRow()>=0)
        plantaFisica.modificar(Integer.parseInt(txtModulo.getText()), txtNumero.getText(), txtTipo.getText(), tblPlantaFisica.getSelectedRow());
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        //Se verifica que exista una fila seleccionada para poder eliminarla
        //se puede selecionar con el mouse o con las flehas del teclado
        if(tblPlantaFisica.getSelectedRow()>=0){
            int opcion = JOptionPane.showConfirmDialog(null, "¿Realmente desea eliminar este registro?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            //Si se confirma la eliminación del registro se procede a ejecutar la operación
            if(opcion==0){
                plantaFisica.eliminar(tblPlantaFisica.getSelectedRow());
                limpiarCampos();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    //Como su nombre lo indica con este método se limpian los campos de texto.
    public void limpiarCampos(){
        
        txtModulo.setText("");
        txtNumero.setText("");
        txtTipo.setText("");
    }
    
    // Método "Escuchador" de teclas específicamente las fechas de arriba y abajo 
    //para actualizar los campos del registro seleccionado"
    
    private void escuharTeclas(){
        
        tblPlantaFisica.addKeyListener( new KeyAdapter(){
            @Override
            public void keyReleased( KeyEvent e ){ 
                if( tblPlantaFisica.getSelectedRowCount() > 0 ){ 
                    if (e.getKeyCode() == KeyEvent.VK_UP || e.getKeyCode() == KeyEvent.VK_DOWN){
                        
                        if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),0)!=null)
                            txtModulo.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),0).toString());
                        else
                            txtModulo.setText("");
                        if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),1)!=null)
                            txtNumero.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),1).toString());
                        else
                            txtNumero.setText("");
                        if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),2)!=null)
                            txtTipo.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),2).toString());
                        else
                            txtTipo.setText("");
                        
                    }
                }
            }
        });
    
    }
    
    //Método "Escuchador" del mouse para actualizar los campos del registro seleccionado"
    
    private void escucharMouse(){
        tblPlantaFisica.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                
                if( tblPlantaFisica.getSelectedRowCount() > 0 ){
                    
                    if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),0)!=null)
                            txtModulo.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),0).toString());
                        else
                            txtModulo.setText("");
                        if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),1)!=null)
                            txtNumero.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),1).toString());
                        else
                            txtNumero.setText("");
                        if(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),2)!=null)
                            txtTipo.setText(plantaFisica.getModeloDeTabla().getValueAt(tblPlantaFisica.getSelectedRow(),2).toString());
                        else
                            txtTipo.setText("");
                }   
            }
        });
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantaFisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantaFisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantaFisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPlantaFisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPlantaFisica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblModulo;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTable tblPlantaFisica;
    private javax.swing.JTextField txtModulo;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
